[build-system]
requires = ["setuptools>=42", "wheel", "cmake>=3.22", "numpy"]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = ["error"]

[tool.cibuildwheel]
test-requires = ["pytest", "pytest-repeat", "numpy"]
test-command = "pytest {project}/scripts/test.py -x"
build-verbosity = 0

# We need to build for all platforms:
# - on Linux: x86_64, aarch64, i686, ppc64le, s390x
# - on MacOS: x86_64, arm64, universal2
# - on Windows: AMD64, x86, ARM64
# https://cibuildwheel.readthedocs.io/en/stable/options/#archs
#
# Important to note, not all those paltforms have recent images.
# The `manylinux_2_28` seems to be missing for `s390x`, `i686`, and `ppc64le`.
# The `i686` is 32-bit x86, and `x86_64` is 64-bit x86.
archs = ["all"]

# Skip PyPy builds... we are implementing a CPython binding after all :)
skip = ["pp*"]

[tool.cibuildwheel.linux]
before-build = ["rm -rf {project}/build"]
manylinux-x86_64-image = "manylinux_2_28"
manylinux-aarch64-image = "manylinux_2_28"
before-all = ["sh ./.github/workflows/pre_cibuildwheel.sh"]
repair-wheel-command = "auditwheel repair --lib-sdir . -w {dest_dir} {wheel}"

[tool.cibuildwheel.macos]
before-build = ["rm -rf {project}/build"]
repair-wheel-command = "delocate-wheel --require-archs {delocate_archs} -w {dest_dir} -v {wheel}"

[tool.cibuildwheel.windows]
before-build = ["rd /s /q {project}\\build || echo Done"]
